\documentclass[11pt,a4paper,oneside]{article}
%\renewcommand\abstractname{Executive Summary}
%\renewcommand*\thesection{\arabic{section}}
\setcounter{tocdepth}{3}
\setcounter{secnumdepth}{3}
\usepackage{tocloft}
\usepackage{graphicx}
\usepackage[section]{placeins}
\usepackage{array}
\usepackage{rotating}
\usepackage{float}
\usepackage{pdflscape}
\usepackage{wrapfig}
\usepackage{multirow}
\usepackage{epstopdf}
\usepackage{txfonts}
\usepackage{url}
\usepackage{graphics}
\usepackage[titletoc,toc,title]{appendix}
\usepackage{varioref}
\usepackage{verbatim}
\usepackage{listings}
\usepackage{color}
\usepackage{acronym}
\usepackage{url}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{fancyhdr}
%\usepackage[table]{xcolor}
\usepackage{hhline}
\usepackage{pdfpages}
\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\usepackage[usenames,dvipsnames,table]{xcolor}
\lstset{ %
  language=R,                     % the language of the code
  basicstyle=\footnotesize,       % the size of the fonts that are used for the code
  numbers=left,                   % where to put the line-numbers
  numberstyle=\tiny\color{gray},  % the style that is used for the line-numbers
  stepnumber=1,                   % the step between two line-numbers. If it's 1, each line
                                  % will be numbered
  numbersep=5pt,                  % how far the line-numbers are from the code
  backgroundcolor=\color{white},  % choose the background color. You must add \usepackage{color}
  showspaces=false,               % show spaces adding particular underscores
  showstringspaces=false,         % underline spaces within strings
  showtabs=false,                 % show tabs within strings adding particular underscores
  frame=single,                   % adds a frame around the code
  rulecolor=\color{black},        % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. commens (green here))
  tabsize=2,                      % sets default tabsize to 2 spaces
  captionpos=b,                   % sets the caption-position to bottom
  breaklines=true,                % sets automatic line breaking
  breakatwhitespace=false,        % sets if automatic breaks should only happen at whitespace
  title=\lstname,                 % show the filename of files included with \lstinputlisting;
                                  % also try caption instead of title
  keywordstyle=\color{blue},      % keyword style
  commentstyle=\color{dkgreen},   % comment style
  stringstyle=\color{mauve},      % string literal style
  morekeywords={*,...}            % if you want to add more keywords to the set
}
\renewcommand{\lstlistingname}{Code Extract} 
\newcommand{\degree}{\ensuremath{^\circ}}
\renewcommand{\headrulewidth}{0pt} % remove the header rule
\newcommand{\includecode}[2][c]{\lstinputlisting[caption=#2, escapechar=, style=custom#1]{#2}}
 
\addtolength{\voffset}{-1.5cm}
\addtolength{\hoffset}{-1.3cm}
\addtolength{\textwidth}{3cm}
\addtolength{\textheight}{120pt}
\addtolength{\marginparwidth}{-100pt}
\addtolength{\oddsidemargin}{-0.3in}
\addtolength{\evensidemargin}{-0.3in}
\textwidth 6.6in
 
\setlength\cftparskip{1pt}
\setlength{\parindent}{0pt}
% leftmark shows the chapter, rightmark shows the section.
\fancyhead{}
\fancyfoot[L]{}% empty left
\fancyfoot[R]{ % right
}
\pagestyle{fancy}

\title {Final Year Report - Investigation into the Precision Time Protocol}
\author {James Cox
\\ Department of Electrical and Electronic Engineering \\
\\
University of Bath}
\date{\today}
\begin{document}

\maketitle
\vfill

\begin{abstract}
Abstract goes here
\end{abstract}
\newpage
\tableofcontents
\newpage
\section*{Acronyms}
\begin{acronym}
\acro{CSAC}{}
\acro{CSMA/CD}{Carrier Sense Multiple Access with Collision Detection}
\acro{GM}{Grandmaster}
\acro{GPS}{Global Positioning System}
\acro{IEEE}{Institute of Electrical and Electronic Engineers}
\acro{ITU}{International Telecommunication Union}
\acro{LAN}{Local Area Network}
\acro{NERC}{North American Electric Reliability Company}
\acro{NTP}{Network Time Protocol}
\acro{PPS}{Pulse per Second}
\acro{PTP}{Precision Time Protocol}
\acro{PTPd}{PTP Daemon}
\acro{SNTP}{Simple Network Time Protocol}
\acro{TDEV}{Time Deviation}
\acro{UTC}{Coordinated Universal Time}
\end{acronym}

\listoffigures
\listoftables
\newpage
\section{Introduction}

In several applications, maintaining a high level of time accuracy is very important. 
This may either be a physical timestamp or that there is a need to synchronise process occuring at specific times.
Some examples of these applications are: telecommunications, the automation industry, or the power transmission industry.\\

There are currently only a few methods to realise this, which depends heavily on the application. 
For example, if there is space and the budget, a high accuracy atomic clock \ac{CSAC} could be used. 
If this is not possible, then a \ac{GPS} receiver could be used and time can then be synchronised to the accurate clocks onboard the \ac{GPS} satellites.\\

This leads to some issues when heavily relying on \ac{GPS} for time synchronisation. 
There would be catastrophic consequences in some applications if timing is not kept accurate.
The issues relate to the ease of jamming of a \ac{GPS receiver}. [reference]\\

Due to the jammability of GPS, there must be either be a backup solution or an alternative method of time synchronisation in order for accurate timing to still be possible. \\

One way of realising this is by using a distributed timing system, such as \ac{NTP} or \ac{PTP}. 
This would allow for nodes to be able to synchronise their clocks with a much more accurate time source without having to rely on \ac{GPS}

\subsection{How PTP Works}
Explain PTP Briefly

\subsection{Project Description}
This project aims to investigate \ac{PTP} performance on a heavily used Ethernet network, and to attempt to quantify \ac{PTP} performance using packet metrics. \\
There are also some deliverables as part of the Final Year Project. 
These include: an interim report, a log book, a final year report and a poster. 
These deliverables, along with the sub tasks involved in order to complete them have been detailed in the Gantt chart, as seen in Appendix \ref{ganttchart}. \\

The following project objectives have been identified:


\begin{description}
\item[Learn about \ac{PTP} and other work in relation to the protocol] \hfill \\ 
This stage would occur at the beginning of the project to understand how \ac{PTP} works.
This is important so work can then be carried out to investigate \ac{PTP} performance on a network. 
\item[Collect PTP Data] \hfill \\ 
In parallel with the above, PTP data can be collected. 
This will be monitoring the performance of \ac{PTP} across the network as well as how using multiple types of grandmaster/slaves affect the performance. 
Different clock locations in the network will also be considered.
\item[Implement some packet metric scripts] \hfill \\ 
To be able to understand the performance of the network, some packet metric scripts will be created. 
A suitable language will be chosen once this part of the project begins.
\item[Determine packet performance using these scripts] \hfill \\
Multiple window sizes and types of metric will be used to quantify network performance.
\item[Test Chronos' equipment and provide feedback] \hfill \\ 
As Chronos has provided this project with some equipment, this equipment will also be thoroughly tested and any information gathered can be passed to them once the project is completed.
\end{description}


\section{Literature Review}

With the following objectives and tasks in mind, a literature review was performed with some suitable documentation: mainly packet metric related, but also on cryptographically signing PTP packets.\\

The reports below will be discussed in some detail:
\begin{description}
\item[Definitions and terminology for synchronization in packet networks \cite{ITUPacketMetrics}] A standard regarding different packet metrics that could be used in order to try and quantify network delay. 
\item[Prevention of Packet Collisions \cite{IEEECollision}] A journal article describing an algorithm that aims to prevent packet collisions in an Ethernet network.
\end{description}


\subsection{Lit Review for Packet Metric}
Lit review for packet metric 
\subsection{Other Relevant Reading}

There was other relevant reading performed in the first week of the project to do with cryptography and how packet collisions can be prevented. 
- cryptography ?


\section{Project Methods}

Based on the objectives mentioned previously, the project can be split into three distinct sections:  

\begin{description}
\item[Data Collection] \hfill \\ This part of the project will involve collecting \ac{PTP} timing data on the university network.
It will consist of using a number of different clock types and locations on the network.
\item[Packet Methods] \hfill \\ This section will mainly involve the implementations of the packet metric scripts based on the referenced report above.
Focus on the implementation will be made in this section rather than the metrics themselves. 
\item[Calculating/Analysing Results] \hfill \\ Once the metrics have been implemented fully, there needs to be some supplementary scripts written to process some of this data. 
\end{description}

\section{Data Collection}

The first step to perform with this part of the project is to work out what hardware is available. 
The following hardware was identifed as being available to use for the duration of this project.

\begin{itemize}
\item Hardware Grandmaster - Chronos TimePort \cite{TimePort}
\item Hardware Slave - Chronos Syncwatch \cite{SyncWatch}
\item Hardware Slave - Beaglebone Black \cite{}
\item Software Grandmaster - \ac{PTPd}
\item Software Slave - \ac{PTPd}
\end{itemize}

\subsection{Hardware - Timeport \cite{TimePort}}

\subsubsection{Description} 

The Chronos CTL4540 Timeport is a low powered portable device that is able to maintain its time to a high accuracy when disconnected from a synchronisation source.
It is able to maintain accuracy within a couple hundred nanoseconds without needing to be connected to \ac{GPS}. 
It also has an internal LiPo battery. 
This enables the device to be used to transport and measure time. \\

With the above features in mind, it is thus suited for a number of markets, including the power industry and telecommunication network operators. 
It can also be used to correct for any time errors caused by any cabling or equipment. \\

Typical methods of doing this would involve using a Caesium atomic clock [REF] or setting up a \ac{GPS} attenna and connecting this to some other equipment. 
The TimePort is best suited over these two operaitons because it is much lower power and much more transportable than an atomic clock.
It also removes the requirement of \ac{GPS} equipment.\\

Appendix \ref{app:TimePortSpec} shows the full specifications of the CTL4540 TimePort. Below are a few labelled photos of the clock.

\begin{figure}
\centering
\begin{subfigure}{\textwidth}
	\centering
%	\includegraphics{Figures/TimePortOutside.eps"}
	\label{TimePortOutside}
	\caption{Chronos TimePort Outside}
\end{subfigure}%
\begin{subfigure}{\textwidth}
	\centering
%	\includegraphics{Figures/TimePortInside.eps}
	\label{TimePortInside}
	\caption{Chronos TimePort Inside}
\end{subfigure}
\label{TimePortDiagrams}
\caption{Chronos TimePort Labelled Diagrams}
\end{figure}

The difference between the release TimePort and the TimePort that will be used in this project is that the firmware on the TimePort is bleeding edge. 
With that in mind time needs to be allocated to allow for any issues that the clock may have.
The university has close links with Chronos thus it should be straightforward to either get our issues solved or to receive a new TimePort. \\

This clock will mainly be kept in the same position on the network and will acct as a Grandmaster. \\

In terms of documentation there is not much available for this device apart from some emails sent between Chronos and Dr Robert Watson. 
Therefore Appendix \ref{TimePortDocumentation} shows some documentation put together for my own use during this project. 
The documentation includes details on how to interface with the clock and a list of basic commands. \\

To access the device it needs to be accessed locally over a USB to Serial connection. 
SSH is unavailable as the control port has not been implemented yet.
\subsubsection{How to Set Up the TimePort}

- notes in logbook.
- will complete this section Thursday. 
- screenshots too
\subsection{Hardware - Chronos Syncwatch \cite{Syncwatch}}
\subsubsection{Description}
The Chronos Syncwatch is a hardware slave clock used to synchronise time in  a number of different applications.
It operates in all of the current synchronisation technologies. SyncE, ESMC,  PTPv2, 1PPS+TOD, 1PPS, Frequencies(64k-200MHz), T1 \& E1 protocols and interfaces are supported. \\

It can be used on both legacy and modern Ethernet/IP networks. 
It can simultaneously operate on a number of the protocols above. 
It can also operate in both local and remote modes. \\

It is a small modular device with a simple user interface. 
It also integrates with with Symmetricom's TimeMonitor software. \\

The device markets include telecommunications, TV and radio broadcasting, and the power industry. \\

The table shown in Appendix \ref{app:SyncwatchSpec} details the Syncwatch specifications. 
The figures below show labelled diagrams of the inside and outside of the Chronos Syncwatch. \\

\begin{figure}
\centering
\begin{subfigure}{\textwidth}
	\centering
%	\includegraphics{Figures/SyncwatchOutside.eps"}
	\label{SyncwatchOutside}
	\caption{Chronos Syncwatch Outside}
\end{subfigure}%

\begin{subfigure}{\textwidth}
	\centering
%	\includegraphics{Figures/SyncwatchInside.eps}
	\label{SyncwatchInside}
	\caption{Chronos Syncwatch Inside}
\end{subfigure}
\label{SyncwatchDiagrams}
\caption{Chronos Syncwatch Labelled Diagrams}
\end{figure}
This product is similar to the TimePort in the fact that there isn't much documentation around for it. 
Therefore Appendix \ref{app:SyncwatchDocumentation} shows the documentation written up for the Syncwatch.\\

The Syncwatch will be mainly kept in the upstairs Level 3 Communications lab as it is a larger device. 
As this device is a release product, all of the ports are working.
Therefore the syncwatch can be set up via SSH or using the program. 
This is all explained in the documentation in Appendix \ref{app:SyncwatchDocumentation}.\\

\subsubsection{How to Set Up the SyncWatch}
- notes in logbook.
- will complete this section Thursday. 
- screenshots too
\subsubsection{Hardware - Beaglebone Black \cite{BBB}}
\subsubsection{Description}
The Beaglebone Black is a hardware device but it is running a software PTP Daemon (called PTPd). \\

In terms of hardware capabilities it has an ARM Cortex A-8 processor with 512MB of DDR3 RAM.
It runs a cut down version of Linux called Angstrom Linux.
It has Ethernet connectivity and runs off of a 5V DC supply.\\

As it runs Linux and can be connected to the network, an SSH server has been set up on it with a static IP address. 
This made it easy to start the PTP daemon. \\

Below (Figure \ref{fig:BBBLabelled} is a labelled picture of the BeagleBone Black.

\begin{figure}
\centering
%\includegraphics{Figures\BBB.eps}
\caption{Labelled BeagleBone Black}
\label{fig:BBBLabelled}
\end{figure}

The Beaglebone will be a useful device to use as a slave clock because of its portability.
It would be able to be placed anywhere on the network without any disruption to that particular lecture room or lab space.

\subsubsection{How to Set up the Beaglebone Black}

When the project was started, Robert Watson had the BeagleBone Black working with PTPd already, so there was only some work to be done in order to automate the process. \\

To set up the Beaglebone Black:

\begin{enumerate}
\item Plug in the Beaglebone Black to the 5V adapter.
\item Plug in the Ethernet cable
\item Once the Beaglebone boots you can then access the device over SSH.
\end{enumerate}

Type:

\begin{lstlisting}
ssh jac50@eepc-rjw-beaglebone.bath.ac.uk
\end{lstlisting}

to log in, replacing jac50 with the username on the device. 
The users on the device were eerjw, jac50, and root.\\

The screenshot below (Figure \ref{SSH_To_Beaglebone}) demonstrates this.
The ls command was typed to show that the connection was successful.

\begin{figure}
\centering
\includegraphics[scale=0.5]{Figures/Screenshots/SSH_To_Beaglebone.eps}
\caption{SSH to Beaglebone}
\label{SSH_To_Beaglebone}
\end{figure}

Once SSH'd into the device, then the device can be accessed like any other linux machine.
Note however that there is a restricted command set.\\

When the BeagleBone boots, it was required that the SD card used to store the test data on would be automounted and that the PTP daemon automatically runs.\\


Several attempts in trying to automount the SD card using conventional means such as adding in an entry to fstab were attempted, but this did not work.\\

The method in getting round this was by creating a script in /etc/init.d. 
Any script located in that folder will automatically be loaded once the device boots. 
The PTP daemon was also run from this same script.
The script would also need to automatically name the data file or the data would be overwritten every time the device was turned on.
A convention of $timeport\_YYYY\_MM\_DD.txt$ was decided.\\

The full bash script is shown below, in Code Extract \ref{lst:bashBBB}

\begin{lstlisting}[label = lst:bashBBB, language = bash, caption=Bash Script in init.d for Beaglebone Black]
#!/bin/bash
mount /dev/mmcblk1p1 /mnt/sd
date=$(date +"%Y_%m_%d")
sudo /home/eesrjw/ptpd2 -i eth0 -C -S -g -d 17 -V > /mnt/sd/eesrjw/timeport_$date.txt
\end{lstlisting}

Line 1 is the bash shebang which lets the operating system know that the following script is written in bash. 
The second line mounts the SD card to the correct location. 
In this case the SD card is device mmcblk1p1, and the mount location is /mnt/sd/.\\

The third line defines a date variable in Year\_Month\_Day format. 
The forth line runs the PTPd2 daemon. 
As the script is not saved in the PATH variable, the full path to the script is used. 
The flags will be discussed in more detail in the later section as similar flags will be used.\\

Once the script above is run (or if the PTPd2 script is run on its own from the terminal), the output is stored in the text file mentioned on Line 5.\\

Once the test is completed, the script can be killed by using $kill -9$ on ptpd2. 
The final step is to transfer the text file from the beaglebone to the local machine ready for packet metrics to be run on it. 

\subsubsection{Sending Data to the Local Machine}

There are two ways to retrieve the data from the Beaglebone: either pulling out the SD card and using an SD card reader to transfer the text file, or remotely using a utility such as rsync. \\

It was decided that as all other commands are sent to the device remotely, that a short rsync script will be made. 
Code Extract \ref{lst:rsync} below is the rsync script used. 

\begin{lstlisting}[language=bash, label = lst:rsync,caption=Rsync Script]
#!/bin/bash
echo "RSync List-only will run"
rsync --list-only jac50@eepc-rjw-beaglebone.bath.ac.uk:/mnt/sd/eesrjw/ ./
echo "Type filename here: "
read fileName
rsync -v --progress jac50@eepc-rjw-beaglebone.bath.ac.uk:/mnt/sd/eesrjw/i\$fileName ./NotSorted
\end{lstlisting}

The script above prompts the user to type in the filename. 
It lists the files in the correct directory on the beaglebone in case the user does not know the correct file name. 
Line 6 then performs the sync operation, using the verbose and the progress flag. \\

The only issue with this script is that it prompts the user twice for the password. 
As this script was not run very often it was not an issue.
If it was however more research would have been done to see if that could be fixed. 
A screenshot below (Figure \ref{fig:rsync} shows the rsync script transferring across a gzipped data file.

\begin{figure}
\centering
\includegraphics[scale=0.3]{Figures/Screenshots/Rsync_From_Beaglebone.eps}
\label{fig:rsync}
\caption{Rsync Example}
\end{figure}

It was important to gzip the file beforehand or the transfer would have taken a lot longer. 
%--------------------------------------------------------------------------
The rate of data collection is around RATE OF DATA HERE
%--------------------------------------------------------------------------

\subsection{Software - PTPd}

The final type of clock that can be used is a software daemon called PTPd (or sometimes PTPd2). 
It is a program written in C that meets most aspects of the IEEE1588 specification. 
PTPd2 meets the changes made in the 2008 standard.\\

In-depth code analysis of the script will not be provided in this report.
Instead the different flags that may be used for this project will be tabulated below (Table \ref{table:FlagsPTPd}).

\begin{table}[H]
\centering
\caption{Flags used for PTPd}
\begin{tabular}{|l|l|l|l|} \hline
\textbf{Flag Name} & \textbf{Flag Letter V2.3.0 or above} & \textbf{Old Flag Letter} & \textbf{Description} \\ \hline
Interface & i & b & Network Interface to use \\ \hline
Domain & d & i & PTP Domain Number \\ \hline
Foreground & C & C & Run program in foreground \\ \hline
Verbose & V & None & Run in Verbose mode \\ \hline
No Clock Adjust & n & t & Do not adjust the local clock \\ \hline 
Slave only mode & s & g & Set PTPd as Slave \\ \hline
\end{tabular}
\label{table:FlagsPTPd}
\end{table}

PTPd can be used as both a slave and a grandmaster.
As there is already a dedicated grandmaster, PTPd will be used mainly as a slave. 

The script call has already been given for the beaglebone. The code extract below has been used for the PTPd\_Netbook 

\begin{lstlisting}[language=bash,label=lst:ptpd2]
./ptpd2 -C -S -g -i 17 -t | tee /home/james/FinalYearProject/PTPData/TestData/TimePort-To-Soft-Test4/RawData.txt
\end{lstlisting}

The difference in the call to ptpd2 above is that tee has also been used so the data is displayed both on the screen and sent to the text file. 
This script can be run on any linux computer with root access. 
Note that the above script in Extract \ref{lst:ptpd2} is already run as a root user.
The other method to do this would be to run the script with sudo. 


\subsection{Data Collection Overview}
As the majority of the devices above will be controlled remotely via SSH, it would be useful for all of them to be on static IPs assigned by the university computing services. 
All devices were able to get a static IP with a domain forwarding in the format eepc-rjw-nameofdevice.bath.ac.uk. 
This is a local address which isn't forwarded outside of the university network. 
The summary table below shows what hardware is available, based on class, and IPs for the PTP port and the control port. 

\begin{table}[H]
\caption{Hardware Summary}
\label{table:hardwareSummary}
\begin{tabular}{|c|c|c|c|c|c|c|c|} \hline
\textbf{Clock ID} & \textbf{Name} & \textbf{Type} &  \textbf{PTP IP} & \textbf{Control IP}  & \textbf{MAC Address} \\ \hline
001 & Chronos TimePort & Hardware GM  &TimePort & USB over Serial & ... \\ \hline
002 & Chronos SyncWatch & Hardware & syncwatchptp & syncwatch & ... \\ \hline
003 & BeagleBone Black & Hardware & beaglebone & beaglebone & ... \\ \hline
004 & PTPd\_Desktop & Software &  ... & ... & ... \\ \hline 
005 & PTPd\_Netbook & Software & ... & ... & ... \\ \hline
\end{tabular}
\end{table}

The clock ID was used with internal documentation to know which clock was used where. 
Note that the IPs listed are just part of the full name. 
To access one of them on the university network, add the prefix eepc-rjw- and the suffix .bath.ac.uk.

\subsection{Locations for Clocks}

To get a varied set of data points, it was decided to collect data at a number of locations throughout the network. 

%Topology of network info in here.
%Note locations of clocks on map
\subsection{Test Sheets}

As there will be quite a few tests performed during the project, and it is important to note times and locations of each test, a test sheet has been created using LibreOffice Calc. An example of a test sheet is found in Appendix \ref{app:testsheet} \\

Each test will have the following:

\begin{description}
\item[Test ID] Each test gets a unique ID number. 
The number increments for every test performed. 
\item[Test Name] A general name for the test. 
This usually consists of the GM clock type, the slave clock type, and the number associated with that type of test. 
\item[Test Date] The date at which the test was performed in ISO 8601 format.
\item[File Name] The file name for the test file.
If the test has to be stopped for any reason, a new file is made with a number at the end. 
The file name is typically RawData.txt. 
\item[Directory] The directory where the test data is stored.
\item[Clock Type] Each clock will have its clock type listed. 
The clock types have been mentioned earlier in this report. 
\item[Clock Name] The name of the clock. 
This is a unique identifer in case multiple clocks of the same type and model are used. 
\item[Clock Model] The model of the clock. 
\item[Start Time] The time that the test started. 
This is as accurate as possible so network data can be correlated with it. 
\item[End Time] The time that the test finishes. 
If the test is stopped prematurely but started up again, the final end time is noted here, but the intermediate start and stop time is listed in the comments section.
\item[Network Activity] An average network activity for the day (low, medium, high). 
This is used to correlate delay spread with network activity.

\item[Test Description] Brief description of why the test was performed and what the expected outcome of the test is.
\item[Comments] Any comments can be noted here. Start/Stop times, or if any issues come up will be noted here.
\end{description}


All of the test sheets will not be shown in this report. 
Instead a summary sheet of all the tests was produced. 
The summary sheet will include the Test name, date, directory, and start and end times of the tests. 
This will show up later in the report. 

\subsection{Testing Schedule}

This part of the project will run in parallel with the implementation stage of the packet metrics, as this does not rely on them being completed. 
The tests that are to be completed will include:

\begin{itemize}
\item Hardware to Hardware
\item Hardware to Software
\item Hardware to Beaglebone
\item Different locations
\item Different Times
\end{itemize}

An explicit testing schedule has not been produced. 
Instead there are week blocks allocated in the gantt chart for data collection. 

%Brainstorm other sections
\section{Packet Methods}

This section of the project is the bulk of the programming development.
Packet metrics will be created in a suitable language and will be run against the data collected in the previous section.\\

A range of packet metrics were chosen to be implemented from the report detailed in the literature review section of this report. The following packet metrics will be implemented:

\begin{itemize}
\item TDEV
\item minTDEV
\item percentileTDEV
\item bandTDEV
\item MATIE
\item MAFE 
\end{itemize}

Note that both MATIE and MAFE can have different packet selection methods (min, percentile, or band), so there may be more than the above implemented in the final script. 
\subsection{Choosing a suitable language}

The first decision to make for this section of the project was to choose a suitable programming language. 
Based on the languages that would be suitable for a task such as this, the following languages were identified: R, C, Matlab, or Python. \\

The requirements that the language must meet in order to be suitable for the project are listed below.\\

Note that parts of this section has been copied from the Individual Technical Report for the Third Year Group Business and Design Project as there are some parts that are applicable. 

\begin{description}
\item[REQ1- Familiarity with the Language] \hfill \\ \textit{Spec: Used for a sufficient length of time} \\ If the language was very familiar the development time of the scripts would be quicker. 
This extra time may be acceptable however if there is a much better language ssuited for the task. 
\item[REQ2 - Well Documented] \hfill \\ \textit{Spec: Not Applicable} \\ The majority of modern high level languages are well documented, with some online resources better than others. 
The language must be well documented so \textbf{[REQ7]} can be met. 
This will also make it easier if \textbf{[REQ1]} has not been met fully as it would be easier to learn the language with good documentation. 
\item[REQ3 - Plotting Functionality] \hfill \\ \textit{Spec: Sufficient plotting functionality available} \\ Does the language support complex plotting as standard or are external libraries required?
\item[REQ4 - External libraries already available] \hfill \\ \textit{Spec: All available} \\ Some external libraries may be needed in case some specific functionality is required. Examples of external libraries that will be required are a command line argument tool and logging functionality.  
\item[REQ5 - Speed] \hfill \\ \textit{Spec: Performs the metrics in a reasonable length of time} \\ The metrics should be able to run on a relatively large dataset in a reasonable length of time.
As it is unknown how long the scripts will take, this reasonable length of time will be decided later.
If need be optimisation can be made to make the scripts faster.
\item[REQ6 - Linux Compatibility] \hfill \\ \textit{Spec: Can be developed under Linux} \\ As the rest of the development will be using a Linux Mint netbook, it is a preference for the language to be suitable for a Linux development environment.

\end{description}
To decide on the best solution, a set of ranking criteria was created as well as a ranking table. 
The table below shows the criteria that the above languages were compared against. 
\begin{table}[H]
\centering
\caption{List of Criteria for the Language Options}
\begin{tabular}{|>{\centering\arraybackslash}p{3cm}|>{\centering\arraybackslash}p{3cm}|>{\centering\arraybackslash}p{2cm}|c|>{\centering\arraybackslash}p{3cm}|>{\centering\arraybackslash}p{3cm}|}\hline
\cellcolor{Black}\textcolor{White}{\textbf{Criterion}} & \cellcolor{Black}\textcolor{White}{\textbf{Description}}& \cellcolor{Black}\textcolor{White}{\textbf{Requirement}} & \cellcolor{Black}\textcolor{White}{\textbf{Weight}} & \cellcolor{Black}\textcolor{White}{\textbf{Highest - 5}} & \cellcolor{Black}\textcolor{White}{\textbf{Lowest - 0}}\\ \hline
Familiarity with the Language & Is the engineer familiar with the language syntax and style? & \textbf{[REQ1]} & 9 & Developed a few large projects. & No familiarity \\ \hline
Plotting functionality & What plotting functionality is available for the language& \textbf{[REQ3]}&  7 & Lots of plotting functionality & All plotting functions would need to be written from scratch \\ \hline
External Libraries available & Are all of the libraries available to complete the project? & \textbf{[REQ4]} & 7 & All of the required libraries are available. & Minimal library support. \\ \hline
Speed & Is the chosen language going to be fast enough for the application? & \textbf{[REQ5]} & 6 & Fast enough. & Not fast at all. Needs careful programming to make as efficient as possible. \\ \hline
Linux Compatibility & Is the language compatible in a linux development environment?  & \textbf{[REQ6]} & 6 & Yes, it is compatible. & No. Windows Only \\ \hline
Development Time & How long would it take to develop the first program & \textbf{None} & 7 & Less than a month & Longer than 3 months \\ \hline
 Documentation & Is the language mature enough to have a full set of documentation? & \textbf{[REQ2]} & 6 & Yes. The language has clear and concise for all of the documentation. & Very limited. \\ \hline
\end{tabular}
\end{table}

% ---------------------------------------------------------------------
\begin{table}[H]
\caption{Language Options Ranking Tables}
\label{table:lang}
\centering
\begin{tabular}{|c|c|m{2cm}|m{2cm}|m{2cm}|} \hline
\multicolumn{5}{|l|}{\cellcolor{black}\textcolor{white}{\textbf{Programming Language}}} \\ \hline
\multirow{2}{*}{Ranking Criteria} & \multirow{2}{*}{Weight} & \multicolumn{3}{|c|}{Language} \\ \cline{3-5}
& & C++ & Matlab & Python\\ \hhline{*{5}{|-}}
Familiarity with the Language & 9 & \cellcolor{OrangeRed}{27} & \cellcolor{Goldenrod}{36} & \cellcolor{ForestGreen}{45} \\ \hhline{*{5}{|-}}
Form Libraries Easy to use & 8 & \cellcolor{Orange}{24} & \cellcolor{Orange}{24} & \cellcolor{LimeGreen}{32} \\ \hhline{*{5}{|-}}
Portability & 8 & \cellcolor{ForestGreen}{40} & \cellcolor{OrangeRed}{16} & \cellcolor{LimeGreen}{32} \\ \hhline{*{5}{|-}}
External Libraries Available  & 7 & \cellcolor{ForestGreen}{28} & \cellcolor{Orange}{21} & \cellcolor{ForestGreen}{28} \\ \hhline{*{5}{|-}}
Multithreading Support & 7 & \cellcolor{Orange}{14} & \cellcolor{OrangeRed}{0} & \cellcolor{ForestGreen}{28} \\ \hhline{*{5}{|-}}
Development Time & 7 & \cellcolor{Orange}{21} & \cellcolor{ForestGreen}{28} & \cellcolor{ForestGreen}{28} \\  \hhline{*{5}{|-}}
Documentation & 6 & \cellcolor{Orange}{18} & \cellcolor{Orange}{18} & \cellcolor{ForestGreen}{30} \\ \hhline{*{5}{|=}}
\multicolumn{2}{|r|}{\textbf{Total Figure of Merit}} & 151 & 115 & \cellcolor{ForestGreen}{195} \\ \hhline{*{5}{|-}}
\end{tabular}
\end{table}

Therefore based on the ranking table above it was decided that R will be the most suitable language for the task.
In addition to this there are some R scripts as part of the PTPd which may also be used if suitable.\\

%Some information on R


\subsection{General Packet Metric Implementation}

\subsubsection{TDEV and TDEV derivatives}

\subsubsection{MATIE and MAFE derivatives}

\subsubsection{Overall Packet Script}

\subsubsection{Testing}

\subsubsection{Optimisation}


\subsection{Calculating Results}
*explain workflow of collecting data
\subsubsection{Other Utility Scripts}

explain what utility scripts otherwise not mentioned above that will be used.


Awk Data Parser

\section{Results}

*explain results
\section{Discussion}
\section{Milestones}
\section{Conclusion}
\section{Acknowledgements}

\bibliographystyle{ieeetr}
\bibliography{Bibliography}
\begin{appendices}
\section{Gantt Chart and Table}
\label{ganttchart}
\begin{figure}
\centering
%\includegraphics[scale=0.4]{Figures/GanttChart.eps}
\caption{Gantt Chart}
\end{figure}
\begin{table}[H]
\begin{tabular}{|c|}
\end{tabular}
\end{table}

\section{Chronos CTL4540 TimePort Specification}
\begin{table}
\begin{tabular}{l l } \\
\multirow{2}{\textbf{IPPS Holdover}} & 200 nanoseconds over 8 hours (\pm $10\,^{\circ}\mathrm{C}$ temp change)  \\ 
& 100 nanoseconds ove 4 hours (\pm $10\,^{\circ}\mathrm{C}$ temp change) \\ 
\textbf{\large{Inputs}} \\ 
+5V DC: & MiniB USB \\ 
GPS antenna: & SMA \\
Ethernet (PTP and SNTP/NTP): & RJ45 10/100 \\ 
Ethernet (management): & RJ45 10/100 \\
1PPS (phase 2): & BNC \\ \\
\textbf{\large{Outputs}} \\ 
1PPS: & BNC \\
Frequency 1: 2.048 MHz, 10 MHz & BNC G.703 \\
Frequency 2: 2.048 MHz, 10 MHz & BNC G.703 \\
IRIG-B: & BNC \\
RS232: & 9 way D-Type 9600 band \\
RS442: & 15 way D-Type 9600 band \\
Ethernet (PTP and SNTP/NTP) (Max 10 clients): & RJ45 10/100 \\
Ethernet (management): & RJ45 10/100 \\ \\
\textbf{\large{Environmental}} \\
Operating Temperature:  & $0\,^{\circ}\mathrm{C}$ to +$50\,^{\circ}\mathrm{C}$ \\
Maintain holderover tolderance down to: & $ -10\,^{\circ}\mathrm{C}$ for 15 minutes \\
Storage temperature:  & $-20\,^{\circ}\mathrm{C}$ to +$80\,^{\circ}\mathrm{C}$ \\ \\
\textbf{\large{Physical}} \\
Size: & 190 x 57 x 170mm (WxHxL) \\
Weight: & 1150g \\ \\
\end{tabular}
\end{table} 
\section{TimePort Documentation}
\input{TimePortDocumentation.latex}
\section{Test Sheet Example}
\begin{table}[H]
\begin{tabular}{|l|l|p{3cm}|l|l|} \hline \\
\multicolumn{5}{|c|}{Test: Timeport\_to\_Software Test One} \\ \hline
 \textbf{Test Name:} & \multicolumn{2}{|l|}{TimePort\_To\_Software Test One} & & \\ \hline
 \textbf{Test ID:} & \multicolumn{2}{|l|}{001} & &\\ \hline
 \textbf{Test Date} & \multicolumn{2}{|l|}{2014-02-27} & & \\ \hline
 \textbf{File Name:} & \multicolumn{2}{|l|}{RawData.txt} & &\\ \hline
 \textbf{Directory:} & \multicolumn{2}{|l|}{./PTPData/TimePort\_To\_Software\_Test1} & &\\ \hline
 \textbf{Start Time:} & \multicolumn{2}{|l|}{1037} & &\\ \hline
 \textbf{End Time:} &\multicolumn{2}{|l|}{2200} & &\\ \hline
\textbf{Clock \#1 Type:} & Hardware & & \textbf{Clock \#2 Type:} & Software \\ \hline

\textbf{Clock \#1 Name:} & TimePort\_1 & & \textbf{Clock \#2 Name:} & PTPd\_Netbook \\ \hline
\textbf{Clock \#1 Model:} & TimePort & & \textbf{Clock \#2 Model:} & PTPd \\ \hline
\textbf{Clock \#1 Location:} & Watson's Office & & \textbf{Clock \#2 Location:} & 2E 2.13 \\ \hline 
& & & &\\ \hline
\textbf{Network Activity:} & Normal & & & \\ \hline
\textbf{Test Description:} & \multicolumn{4}{|l|}{An initial test to collect data to supplement the example data already received. } \\ \hline
\textbf{Comments} & \multicolumn{4}{|l|}{1342: Data seems to be collecting fine. 3hrs20mins: 45MB} \\ \hline
\end{tabular}
\end{table}
\section{Test Sheet Summary Sheet}
\input{SummaryTestSheet.latex}
\section{Main Packet Metric Script}
\section{TDEVAllMethods}
\section{MATIEAllMethods}
\end{appendices}
\end{document}

